import type { Metadata } from 'next';
import localFont from 'next/font/local';
import './globals.css';
import { Header } from '@/components/common/Header';
import { Footer } from '@/components/common/Footer';
import { Theme, ThemeProvider } from '@/context/ThemeContext';
import { cookies } from 'next/headers';

const geistSans = localFont({
  src: './fonts/GeistVF.woff',
  variable: '--font-geist-sans',
  weight: '100 900',
});
const geistMono = localFont({
  src: './fonts/GeistMonoVF.woff',
  variable: '--font-geist-mono',
  weight: '100 900',
});
const rokkittSerif = localFont({
  src: './fonts/Rokkitt-Bold.woff2',
  variable: '--font-rokkitt-serif',
  weight: '700',
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const cookieStore = cookies();
  const themeCookie = (await cookieStore).get('theme');
  const initialTheme = themeCookie ? themeCookie.value : 'light';
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${rokkittSerif.variable} ${initialTheme} font-sans`}
      >
        <ThemeProvider initialTheme={initialTheme as Theme}>
          <Header />
          <main>{children}</main>
          <Footer />
        </ThemeProvider>
      </body>
    </html>
  );
}
